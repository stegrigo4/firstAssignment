name: Testing
on: 
  pull_request:
jobs:
    validate:
      environment: Test
      env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      runs-on: ubuntu-latest
      steps:
          - name: Checkout code
            uses: actions/checkout@v4
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
          - name: Build and Run Docker Compose for Test
            run: |
              docker-compose -f compose.yaml up -d --build
              echo "build"
              # Validate Nginx configuration
              docker-compose -f compose.yaml exec -ti test nginx -t -c /etc/nginx/nginx.conf
              echo "nginx verified"
              # Validate PHP syntax
              docker-compose -f compose.yaml exec -ti test php -l /nginx_php/index.php
              echo "php verified"
              pwd
              ls -la
    deployment:
      needs: validate
      environment: Test
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        MYSQL_USER: ${{ secrets.MYSQL_USER }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      runs-on: ubuntu-latest
      steps:
        - name: Install SSH Key
          uses: shimataro/ssh-key-action@v2
          with:
            key: ${{ secrets.ID_RSA }}
            known_hosts: 'placeholder'
        - name: Adding Known Hosts
          run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Copy Secrets into local file
          run: |
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> /home/runner/work/firstAssignment/firstAssignment/.env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> /home/runner/work/firstAssignment/firstAssignment/.env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> /home/runner/work/firstAssignment/firstAssignment/.env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> /home/runner/work/firstAssignment/firstAssignment/.env
        - name: Copy files with SCP
          run: |
            scp -rv /home/runner/work/firstAssignment/firstAssignment ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/grigo
        - name: Make backup directory
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ./backup"
        - name: Spin up the containers
          run: |
            ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd firstAssignment; docker compose down; docker compose up --build -d"
        - name: Make backup
          run: |
              ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker-compose -f ~/firstAssignment/compose.yaml exec -ti db bash -c 'mysqldump -h db -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DATABASE > ~/firstAssignment/backup/backup_\$(date +%F_%H-%M-%S).sql'"
        - name: Copy backup files with SCP
          run: |
            scp -rv ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/grigo/backup /home/runner/work/firstAssignment/firstAssignment/backup
          